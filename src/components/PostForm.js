// src/components/PostForm.js
import React, { useState } from 'react';
import '../styles/PostForm.css';

export default function PostForm() {
  const [formData, setFormData] = useState({
    image: null,
    fish: '',
    size: '',
    comment: '',
    bait: '',
    lure: '',
    privacy: 'detail',
    location: '',
    prefecture: ''
  });

  const [termsAccepted, setTermsAccepted] = useState(false); // Рєљ У┐йтіа№╝Ђ

  const handleChange = (e) => {
    const { name, value, files } = e.target;
    if (name === 'image') {
      setFormData({ ...formData, image: URL.createObjectURL(files[0]) });
    } else {
      setFormData({ ...formData, [name]: value });
    }
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log('ТіЋуе┐тєЁт«╣:', formData);
    alert("ТіЋуе┐сЂЌсЂЙсЂЌсЂЪ№╝Ђ№╝ѕС╗«№╝Ѕ");
  };

  return (
    <div className="post-form-page">
      <h2 className="post-title">ТюђжФўсЂ«уъгжќЊсѓњсѓисѓДсѓбсЂЌсѓѕсЂє№╝Ђ</h2>

      <form className="post-form" onSubmit={handleSubmit}>
        {/* тєЎуюЪсѓбсЃЃсЃЌсЃГсЃ╝сЃЅ */}
        <label className="image-upload">
          {formData.image ? (
            <img src={formData.image} alt="preview" className="image-preview" />
          ) : (
            <span className="upload-placeholder">№╝І тєЎуюЪсѓњУ┐йтіа / Тњ«тй▒</span>
          )}
          <input type="file" name="image" accept="image/*" onChange={handleChange} />
        </label>

        <input type="text" name="fish" placeholder="­ЪљЪ жГџуе«№╝ѕСЙІ: сѓ┐сѓц№╝Ѕ" value={formData.fish} onChange={handleChange} />
        <input type="number" name="size" placeholder="­ЪЊЈ сѓхсѓцсѓ║№╝ѕcm№╝Ѕ" value={formData.size} onChange={handleChange} />

        <div className="privacy-options">
          <label>­ЪЊЇ та┤ТЅђсЂ«тЁгжќІу»ётЏ▓:</label>
          <div className="radio-group">
            <label><input type="radio" name="privacy" value="detail" checked={formData.privacy === 'detail'} onChange={handleChange} /> УЕ│у┤░сЂЙсЂДтЁгжќІ</label>
            <label><input type="radio" name="privacy" value="prefecture" checked={formData.privacy === 'prefecture'} onChange={handleChange} /> жЃйжЂЊт║юуюїсЂ«сЂ┐</label>
            <label><input type="radio" name="privacy" value="private" checked={formData.privacy === 'private'} onChange={handleChange} /> жЮътЁгжќІ</label>
          </div>
        </div>

        {formData.privacy === 'detail' && (
          <input type="text" name="location" placeholder="­ЪЊї та┤ТЅђсѓњтЁЦтіЏ№╝ѕСЙІ: Т▒ЪсЃјт│Х№╝Ѕ" value={formData.location} onChange={handleChange} />
        )}

        {formData.privacy === 'prefecture' && (
          <select name="prefecture" value={formData.prefecture} onChange={handleChange}>
            <option value="">жЃйжЂЊт║юуюїсѓњжЂИТіъ</option>
            {['тїЌТхижЂЊ', 'жЮњТБ«уюї', 'т▓ЕТЅІуюї', 'т««тЪјуюї', 'уДІућ░уюї', 'т▒▒тйбуюї', 'удЈт│Хуюї',
              'УїетЪјуюї', 'ТаЃТюеуюї', 'уЙцждгуюї', 'тЪ╝ујЅуюї', 'тЇЃУЉЅуюї', 'ТЮ▒С║гжЃй', 'уЦътЦѕтиЮуюї',
              'Тќ░ТйЪуюї', 'т»їт▒▒уюї', 'уЪ│тиЮуюї', 'удЈС║Ћуюї', 'т▒▒Тбеуюї', 'жЋижЄјуюї',
              'т▓љжўюуюї', 'жЮЎт▓Ауюї', 'ТёЏуЪЦуюї', 'СИЅжЄЇуюї',
              'Т╗ІУ│ђуюї', 'С║гжЃйт║ю', 'тцДжўфт║ю', 'тЁхт║Фуюї', 'тЦѕУЅ»уюї', 'тњїТГїт▒▒уюї',
              'ж│ЦтЈќуюї', 'т│ХТа╣уюї', 'т▓Ат▒▒уюї', 'т║Ѓт│Хуюї', 'т▒▒тЈБуюї',
              'тЙ│т│Хуюї', 'ждЎтиЮуюї', 'ТёЏтфЏуюї', 'жФўуЪЦуюї',
              'удЈт▓Ауюї', 'СйљУ│ђуюї', 'жЋит┤јуюї', 'уєіТюгуюї', 'тцДтѕєуюї', 'т««т┤јуюї', 'ж╣┐тЁљт│Хуюї',
              'Т▓ќуИёуюї'
            ].map(pref => (
              <option key={pref} value={pref}>{pref}</option>
            ))}
          </select>
        )}

        <textarea name="comment" placeholder="­Ъњг сѓ│сЃАсЃ│сЃѕ№╝ѕС╗╗ТёЈ№╝Ѕ" rows={3} value={formData.comment} onChange={handleChange} />
        <input type="text" name="bait" placeholder="­ЪјБ С╗ЋТјЏсЂЉ№╝ѕС╗╗ТёЈ№╝Ѕ" value={formData.bait} onChange={handleChange} />

        {/* РюЁ тѕЕућеУдЈу┤ёсЃЂсѓДсЃЃсѓ»сЃюсЃЃсѓ»сѓ╣ */}
        <div className="terms-check">
          <label>
            <input
              type="checkbox"
              checked={termsAccepted}
              onChange={() => setTermsAccepted(!termsAccepted)}
            />
            сЂЊсЂ«ТіЋуе┐сЂФсЂ»С║║уЅЕсЂїтєЎсЂБсЂдсЂісѓЅсЂџсђЂСИЇжЂЕтѕЄсЂфтєЁт«╣сѓњтљФсѓЊсЂДсЂёсЂфсЂёсЂЊсЂесѓњуб║УфЇсЂЌсЂЙсЂЌсЂЪсђѓ
          </label>
        </div>

        {/* РюЁ сЃЂсѓДсЃЃсѓ»сЂЋсѓїсЂдсЂёсЂЪсѓЅУАеуц║сЂЎсѓІТіЋуе┐сЃюсѓ┐сЃ│ */}
        {termsAccepted && (
          <button className="submit-button" type="submit">ТіЋуе┐сЂЎсѓІ</button>
        )}
      </form>
    </div>
  );
}